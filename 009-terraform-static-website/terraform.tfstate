{
  "version": 4,
  "terraform_version": "0.12.18",
  "serial": 379,
  "lineage": "1e89b9a7-fbd2-1d69-fdc6-3955657b15fb",
  "outputs": {},
  "resources": [
    {
      "module": "module.deleting-task-serverless-task-list",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_zip",
      "provider": "provider.archive",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "054f2c41f6738eb4a00a32a00675296418675d6e",
            "output_base64sha256": "7nPeBgNZQgenmIOgMbKCyCWi8WFC44bWL74h6tAuRHE=",
            "output_md5": "fb8fa5698ed1343cbe9a412de8239d45",
            "output_path": "/tmp/deleting-task-serverless-task-list.zip",
            "output_sha": "054f2c41f6738eb4a00a32a00675296418675d6e",
            "output_size": 448,
            "source": [
              {
                "content": "import json\nimport boto3\nimport os\n\ndynamodb = boto3.client('dynamodb')\n\n\ndef lambda_handler(event, context):\n    data = json.loads(event['body'])\n    dynamodb.delete_item(\n        TableName=os.environ['tableName'],\n        Key={\n            'PK': {'S': data['PK']}\n        }\n    )\n    return {\n        \"statusCode\": 200,\n        \"headers\": {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n        \"body\": \"done\"\n    }\n",
                "filename": "deleting-task-serverless-task-list.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          }
        }
      ]
    },
    {
      "module": "module.get_all_tasks_lambda",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_zip",
      "provider": "provider.archive",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "0727a346cbd1234abeca5198c01d55169babc111",
            "output_base64sha256": "tF4d1s+h1eiXh4aUUcRxZny0NMFZOQHsR5AQXZeydCc=",
            "output_md5": "dc5df351acd229d5090686ecad488a9d",
            "output_path": "/tmp/get-all-tasks-serverless-task-list.zip",
            "output_sha": "0727a346cbd1234abeca5198c01d55169babc111",
            "output_size": 496,
            "source": [
              {
                "content": "import boto3\nimport json\nimport os\n\ndynamodb = boto3.client('dynamodb')\n\n\ndef lambda_handler(event, context):\n    response = dynamodb.scan(TableName=os.environ['tableName'])\n    tasks = list(\n        {\n            'PK': item['PK']['S'],\n            'description': item['description']['S'],\n            'isCompleted': item['isCompleted']['BOOL'],\n        }\n        for item in response['Items']\n    )\n    return {\n        \"statusCode\": 200,\n        \"headers\": {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n        \"body\": json.dumps(tasks)\n    }\n",
                "filename": "get-all-tasks-serverless-task-list.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          }
        }
      ]
    },
    {
      "module": "module.create-task-serverless-task-list",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_zip",
      "provider": "provider.archive",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "65da75750a2ca407950ba4deb895ad810680cd0a",
            "output_base64sha256": "P8TcfpRjO9/h4XpdIfrjmSpgZBpoCRiyuFUSOViNUGk=",
            "output_md5": "31397a048b605aef43e201071c5e1120",
            "output_path": "/tmp/create-task-serverless-task-list.zip",
            "output_sha": "65da75750a2ca407950ba4deb895ad810680cd0a",
            "output_size": 480,
            "source": [
              {
                "content": "import json\nimport boto3\nimport os\n\ndynamodb = boto3.client('dynamodb')\n\n\ndef lambda_handler(event, context):\n    data = json.loads(event['body'])\n    dynamodb.put_item(\n        TableName=os.environ['tableName'],\n        Item={\n            'PK': {'S': data['PK']},\n            'description': {'S': data['description']},\n            'isCompleted': {'BOOL': data['isCompleted']}\n        }\n    )\n    return {\n        \"statusCode\": 200,\n        \"headers\": {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n        \"body\": \"done\"\n    }\n",
                "filename": "create-task-serverless-task-list.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "deploying_api_gateway",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_date": "2020-01-06T13:44:15Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:eu-west-1:221221842155:gv8cvyhfzg/default",
            "id": "to7jq2",
            "invoke_url": "https://gv8cvyhfzg.execute-api.eu-west-1.amazonaws.com/default",
            "rest_api_id": "gv8cvyhfzg",
            "stage_description": null,
            "stage_name": "default",
            "variables": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.create-task-serverless-task-list.aws_api_gateway_integration.couple_api_and_lambda",
            "module.create-task-serverless-task-list.aws_api_gateway_method.rest_method",
            "module.create-task-serverless-task-list.aws_lambda_function.lambda",
            "module.deleting-task-serverless-task-list.aws_api_gateway_integration.couple_api_and_lambda",
            "module.deleting-task-serverless-task-list.aws_api_gateway_method.rest_method",
            "module.deleting-task-serverless-task-list.aws_lambda_function.lambda",
            "module.get_all_tasks_lambda.aws_api_gateway_integration.couple_api_and_lambda",
            "module.get_all_tasks_lambda.aws_api_gateway_method.rest_method",
            "module.get_all_tasks_lambda.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_integration.options_mock_integration",
            "module.lambda-backend-skeleton.aws_api_gateway_integration_response.options_mock_integration",
            "module.lambda-backend-skeleton.aws_api_gateway_method.options_pre_flight",
            "module.lambda-backend-skeleton.aws_api_gateway_method_response.options_mock_response",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.deleting-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "couple_api_and_lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "z4h5ro",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "DELETE",
            "id": "agi-gv8cvyhfzg-z4h5ro-DELETE",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:221221842155:function:terraform-deleting-task-serverless-task-list/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.deleting-task-serverless-task-list.aws_api_gateway_method.rest_method",
            "module.deleting-task-serverless-task-list.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.get_all_tasks_lambda",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "couple_api_and_lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "z4h5ro",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-gv8cvyhfzg-z4h5ro-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:221221842155:function:terraform-get-all-tasks-serverless-task-list/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_all_tasks_lambda.aws_api_gateway_method.rest_method",
            "module.get_all_tasks_lambda.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.create-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "couple_api_and_lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "z4h5ro",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "POST",
            "id": "agi-gv8cvyhfzg-z4h5ro-POST",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:221221842155:function:terraform-create-task-serverless-task-list/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.create-task-serverless-task-list.aws_api_gateway_method.rest_method",
            "module.create-task-serverless-task-list.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "options_mock_integration",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "z4h5ro",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-gv8cvyhfzg-z4h5ro-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg",
            "timeout_milliseconds": 29000,
            "type": "MOCK",
            "uri": ""
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_method.options_pre_flight",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "options_mock_integration",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-gv8cvyhfzg-z4h5ro-OPTIONS-200",
            "resource_id": "z4h5ro",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
              "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS,POST'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_parameters_in_json": null,
            "response_templates": {},
            "rest_api_id": "gv8cvyhfzg",
            "selection_pattern": "",
            "status_code": "200"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_integration.options_mock_integration",
            "module.lambda-backend-skeleton.aws_api_gateway_method.options_pre_flight",
            "module.lambda-backend-skeleton.aws_api_gateway_method_response.options_mock_response",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "options_pre_flight",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-gv8cvyhfzg-z4h5ro-OPTIONS",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.deleting-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "rest_method",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "DELETE",
            "id": "agm-gv8cvyhfzg-z4h5ro-DELETE",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.get_all_tasks_lambda",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "rest_method",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-gv8cvyhfzg-z4h5ro-GET",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.create-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "rest_method",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "POST",
            "id": "agm-gv8cvyhfzg-z4h5ro-POST",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "z4h5ro",
            "rest_api_id": "gv8cvyhfzg"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "options_mock_response",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-gv8cvyhfzg-z4h5ro-OPTIONS-200",
            "resource_id": "z4h5ro",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": false,
              "method.response.header.Access-Control-Allow-Methods": false,
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "response_parameters_in_json": null,
            "rest_api_id": "gv8cvyhfzg",
            "status_code": "200"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_method.options_pre_flight",
            "module.lambda-backend-skeleton.aws_api_gateway_resource.tasks_resource",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "tasks_resource",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "z4h5ro",
            "parent_id": "o624lth8bg",
            "path": "/tasks",
            "path_part": "tasks",
            "rest_api_id": "gv8cvyhfzg"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "api",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:eu-west-1::/restapis/gv8cvyhfzg",
            "binary_media_types": [],
            "body": null,
            "created_date": "2020-01-06T13:43:39Z",
            "description": "",
            "endpoint_configuration": [
              {
                "types": [
                  "EDGE"
                ]
              }
            ],
            "execution_arn": "arn:aws:execute-api:eu-west-1:221221842155:gv8cvyhfzg",
            "id": "gv8cvyhfzg",
            "minimum_compression_size": -1,
            "name": "terraform-crud-experiment-full-api-gateway",
            "policy": "",
            "root_resource_id": "o624lth8bg",
            "tags": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamodb-persistence",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "db",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:eu-west-1:221221842155:table/terraform-crud-experiment-full",
            "attribute": [
              {
                "name": "PK",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "global_secondary_index": [],
            "hash_key": "PK",
            "id": "terraform-crud-experiment-full",
            "local_secondary_index": [],
            "name": "terraform-crud-experiment-full",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "tags": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "module": "module.dynamodb-persistence",
      "mode": "managed",
      "type": "aws_dynamodb_table_item",
      "name": "example_1",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "hash_key": "PK",
            "id": "terraform-crud-experiment-full|PK||TASK#32cbf8c5-f080-45f6-a616-e84b40c54c4c|",
            "item": "{\n  \"PK\": {\"S\": \"TASK#32cbf8c5-f080-45f6-a616-e84b40c54c4c\"},\n  \"description\": {\"S\": \"Pay Bills\"},\n  \"isCompleted\": {\"BOOL\": false}\n}\n",
            "range_key": null,
            "table_name": "terraform-crud-experiment-full"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb-persistence.aws_dynamodb_table.db"
          ]
        }
      ]
    },
    {
      "module": "module.dynamodb-persistence",
      "mode": "managed",
      "type": "aws_dynamodb_table_item",
      "name": "example_2",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "hash_key": "PK",
            "id": "terraform-crud-experiment-full|PK||TASK#de8bf42a-1b6d-494a-ac4b-ebe0225a5774|",
            "item": "{\n  \"PK\": {\"S\": \"TASK#de8bf42a-1b6d-494a-ac4b-ebe0225a5774\"},\n  \"description\": {\"S\": \"Go Shopping\"},\n  \"isCompleted\": {\"BOOL\": false}\n}\n",
            "range_key": null,
            "table_name": "terraform-crud-experiment-full"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb-persistence.aws_dynamodb_table.db"
          ]
        }
      ]
    },
    {
      "module": "module.dynamodb-persistence",
      "mode": "managed",
      "type": "aws_dynamodb_table_item",
      "name": "example_3",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "hash_key": "PK",
            "id": "terraform-crud-experiment-full|PK||TASK#7aac9f6e-b959-4766-8ae1-c35d46ad956c|",
            "item": "{\n  \"PK\": {\"S\": \"TASK#7aac9f6e-b959-4766-8ae1-c35d46ad956c\"},\n  \"description\": {\"S\": \"See the Doctor\"},\n  \"isCompleted\": {\"BOOL\": true}\n}\n",
            "range_key": null,
            "table_name": "terraform-crud-experiment-full"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb-persistence.aws_dynamodb_table.db"
          ]
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lambda-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::221221842155:policy/terraform-crud-experiment-full-lambda-policy",
            "description": "A policy similar too Simple-microservice-permissions",
            "id": "arn:aws:iam::221221842155:policy/terraform-crud-experiment-full-lambda-policy",
            "name": "terraform-crud-experiment-full-lambda-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\",\n                \"dynamodb:DeleteItem\",\n                \"dynamodb:GetItem\",\n                \"dynamodb:PutItem\",\n                \"dynamodb:Scan\",\n                \"dynamodb:UpdateItem\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda-role",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::221221842155:role/terraform-crud-experiment-full-lambda-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-01-06T13:43:39Z",
            "description": "",
            "force_detach_policies": false,
            "id": "terraform-crud-experiment-full-lambda-role",
            "max_session_duration": 3600,
            "name": "terraform-crud-experiment-full-lambda-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROATHAOZNTVW4NZFG5RU"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.lambda-backend-skeleton",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "attach-lambda-role-and-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "terraform-crud-experiment-full-lambda-role-20200106134341576900000001",
            "policy_arn": "arn:aws:iam::221221842155:policy/terraform-crud-experiment-full-lambda-policy",
            "role": "terraform-crud-experiment-full-lambda-role"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_iam_policy.lambda-policy",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.deleting-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:eu-west-1:221221842155:function:terraform-deleting-task-serverless-task-list",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "tableName": "terraform-crud-experiment-full"
                }
              }
            ],
            "filename": "/tmp/deleting-task-serverless-task-list.zip",
            "function_name": "terraform-deleting-task-serverless-task-list",
            "handler": "deleting-task-serverless-task-list.lambda_handler",
            "id": "terraform-deleting-task-serverless-task-list",
            "invoke_arn": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:221221842155:function:terraform-deleting-task-serverless-task-list/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-01-06T13:44:15.348+0000",
            "layers": [],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:eu-west-1:221221842155:function:terraform-deleting-task-serverless-task-list:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::221221842155:role/terraform-crud-experiment-full-lambda-role",
            "runtime": "python3.8",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "7nPeBgNZQgenmIOgMbKCyCWi8WFC44bWL74h6tAuRHE=",
            "source_code_size": 448,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.get_all_tasks_lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:eu-west-1:221221842155:function:terraform-get-all-tasks-serverless-task-list",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "tableName": "terraform-crud-experiment-full"
                }
              }
            ],
            "filename": "/tmp/get-all-tasks-serverless-task-list.zip",
            "function_name": "terraform-get-all-tasks-serverless-task-list",
            "handler": "get-all-tasks-serverless-task-list.lambda_handler",
            "id": "terraform-get-all-tasks-serverless-task-list",
            "invoke_arn": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:221221842155:function:terraform-get-all-tasks-serverless-task-list/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-01-06T13:44:09.416+0000",
            "layers": [],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:eu-west-1:221221842155:function:terraform-get-all-tasks-serverless-task-list:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::221221842155:role/terraform-crud-experiment-full-lambda-role",
            "runtime": "python3.8",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "tF4d1s+h1eiXh4aUUcRxZny0NMFZOQHsR5AQXZeydCc=",
            "source_code_size": 496,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.create-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:eu-west-1:221221842155:function:terraform-create-task-serverless-task-list",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "tableName": "terraform-crud-experiment-full"
                }
              }
            ],
            "filename": "/tmp/create-task-serverless-task-list.zip",
            "function_name": "terraform-create-task-serverless-task-list",
            "handler": "create-task-serverless-task-list.lambda_handler",
            "id": "terraform-create-task-serverless-task-list",
            "invoke_arn": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:221221842155:function:terraform-create-task-serverless-task-list/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-01-06T13:44:03.482+0000",
            "layers": [],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:eu-west-1:221221842155:function:terraform-create-task-serverless-task-list:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::221221842155:role/terraform-crud-experiment-full-lambda-role",
            "runtime": "python3.8",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "P8TcfpRjO9/h4XpdIfrjmSpgZBpoCRiyuFUSOViNUGk=",
            "source_code_size": 480,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.deleting-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_lambda_permission",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "terraform-deleting-task-serverless-task-list",
            "id": "AllowAPIGatewayInvoke",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:eu-west-1:221221842155:gv8cvyhfzg/*/*",
            "statement_id": "AllowAPIGatewayInvoke",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.deleting-task-serverless-task-list.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.get_all_tasks_lambda",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_lambda_permission",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "terraform-get-all-tasks-serverless-task-list",
            "id": "AllowAPIGatewayInvoke",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:eu-west-1:221221842155:gv8cvyhfzg/*/*",
            "statement_id": "AllowAPIGatewayInvoke",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_all_tasks_lambda.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.create-task-serverless-task-list",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_lambda_permission",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "terraform-create-task-serverless-task-list",
            "id": "AllowAPIGatewayInvoke",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:eu-west-1:221221842155:gv8cvyhfzg/*/*",
            "statement_id": "AllowAPIGatewayInvoke",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.create-task-serverless-task-list.aws_lambda_function.lambda",
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api",
            "module.lambda-backend-skeleton.aws_iam_role.lambda-role"
          ]
        }
      ]
    },
    {
      "module": "module.s3-front-end-deploy",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "s3-static-bucket",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read",
            "arn": "arn:aws:s3:::terraform-crud-experiment-full-bucket",
            "bucket": "terraform-crud-experiment-full-bucket",
            "bucket_domain_name": "terraform-crud-experiment-full-bucket.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "terraform-crud-experiment-full-bucket.s3.eu-west-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "hosted_zone_id": "Z1BKCTXD74EZPE",
            "id": "terraform-crud-experiment-full-bucket",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:aws:s3:::terraform-crud-experiment-full-bucket/*\",\"Sid\":\"AllowPublicRead\"}],\"Version\":\"2008-10-17\"}",
            "region": "eu-west-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [
              {
                "error_document": "error.html",
                "index_document": "index.html",
                "redirect_all_requests_to": "",
                "routing_rules": ""
              }
            ],
            "website_domain": "s3-website-eu-west-1.amazonaws.com",
            "website_endpoint": "terraform-crud-experiment-full-bucket.s3-website-eu-west-1.amazonaws.com"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.s3-front-end-deploy",
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "error-file",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "terraform-crud-experiment-full-bucket",
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/html",
            "etag": "fdd14a4ce1a8ab1c33c2d1c83878df23",
            "force_destroy": false,
            "id": "error.html",
            "key": "error.html",
            "kms_key_id": null,
            "metadata": null,
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "modules/s3-frontend/error.html",
            "storage_class": "STANDARD",
            "tags": null,
            "version_id": "",
            "website_redirect": ""
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.s3-front-end-deploy",
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "index-file",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "terraform-crud-experiment-full-bucket",
            "cache_control": "",
            "content": "\u003chtml\u003e\n\u003cbody\u003e\n\u003cdiv style=\"width: 400px; margin: 100px auto 0;\"\u003e\n    \u003cinput id=\"new-task\" type=\"text\"\u003e\n    \u003cbutton id=\"add-new-task\"\u003eAdd task\u003c/button\u003e\n    \u003ch3\u003eTasks:\u003c/h3\u003e\n    \u003cdiv id=\"tasks-holder\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cscript src=\"http://wzrd.in/standalone/uuid%2Fv4@latest\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    const addTask = function () {\n        let newTask = {\n            \"PK\": \"TASK#\" + uuidv4(),\n            \"description\": document.getElementById(\"new-task\").value,\n            \"isCompleted\": false\n        };\n        renderTaskElement(newTask);\n        const postXhttp = new XMLHttpRequest();\n        postXhttp.open(\"POST\", \"https://gv8cvyhfzg.execute-api.eu-west-1.amazonaws.com/default/tasks\", true);\n        postXhttp.send(JSON.stringify(newTask));\n        document.getElementById(\"new-task\").value = \"\";\n    };\n    document.getElementById(\"add-new-task\").addEventListener(\"click\", addTask);\n\n    const renderTaskElement = function (task) {\n        const listItem = document.createElement(\"div\");\n        listItem.id = task.PK;\n\n        const checkBox = document.createElement(\"input\");\n        checkBox.type = \"checkBox\";\n        checkBox.onchange = toggleTaskState;\n        checkBox.checked = task.isCompleted;\n        listItem.appendChild(checkBox);\n\n        const deleteButton = document.createElement(\"button\");\n        deleteButton.innerText = \"X\";\n        deleteButton.onclick = deleteTask;\n        listItem.appendChild(deleteButton);\n\n        listItem.appendChild(document.createTextNode(task.description));\n        listItem.style.textDecoration = task.isCompleted ? \"line-through\" : \"none\";\n\n        document.getElementById(\"tasks-holder\").appendChild(listItem);\n    };\n\n    const deleteTask = function () {\n        const listItem = this.parentNode;\n        const taskHolder = listItem.parentNode;\n        taskHolder.removeChild(listItem);\n        const deleteXhttp = new XMLHttpRequest();\n        deleteXhttp.open(\"DELETE\", \"https://gv8cvyhfzg.execute-api.eu-west-1.amazonaws.com/default/tasks\", true);\n        deleteXhttp.send(JSON.stringify({\"PK\": listItem.id}));\n    };\n\n    const toggleTaskState = function () {\n        let isCompleted = this.parentNode.querySelector('input[type=\"checkbox\"]').checked;\n        let updatedTask = {\n            \"PK\": this.parentNode.id,\n            \"description\": this.parentNode.textContent.substr(1), // substr(1) to remove the X from the delete button\n            \"isCompleted\": isCompleted\n        };\n        const postXhttp = new XMLHttpRequest();\n        postXhttp.open(\"POST\", \"https://gv8cvyhfzg.execute-api.eu-west-1.amazonaws.com/default/tasks\", true);\n        postXhttp.send(JSON.stringify(updatedTask));\n        if (isCompleted)\n            this.parentNode.style.textDecoration = \"line-through\";\n        else\n            this.parentNode.style.textDecoration = \"none\";\n    };\n\n    const getXhttp = new XMLHttpRequest();\n    getXhttp.onreadystatechange = function () {\n        if (this.readyState == 4 \u0026\u0026 this.status == 200)\n            JSON.parse(this.response).forEach(renderTaskElement);\n    };\n    getXhttp.open(\"GET\", \"https://gv8cvyhfzg.execute-api.eu-west-1.amazonaws.com/default/tasks\", true);\n    getXhttp.send();\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e",
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/html",
            "etag": "2567a0c7faff5ca61e23c9e48cad97e1",
            "force_destroy": false,
            "id": "index.html",
            "key": "index.html",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": null,
            "storage_class": "STANDARD",
            "tags": {},
            "version_id": "",
            "website_redirect": ""
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda-backend-skeleton.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    }
  ]
}
